const fs = require('fs')
  , path = require('path')
  , routePath = path.resolve(__dirname)
const swaggerUi = require('swagger-ui-express')
const swaggerJsdoc = require('swagger-jsdoc')
const { SWAGGER_ROUTE, CID_HEADER } = require('#/config')

const options = {
  swaggerDefinition: {
    // Like the one described here: https://swagger.io/specification/#infoObject
    openapi: '3.0.0',
    info: {
      title: 'Test API',
      version: '0.0.1',
      description: 'Test Express API with autogenerated swagger doc',
    },
    host: 'http://localhost:3000',
    basePath: '/',
    servers: [{ url: 'http://localhost:3000' }],
    parameters: {
      correlationId: {
        in: 'header',
        name: CID_HEADER,
        description: 'Identification of request in all flow in the system',
        schema: {
          type: 'string',
          format: 'uuid'
        },
        required: false
      }
    },
    components: {
      securitySchemes: {
        // Bearer: {
        //   type: 'apiKey',
        //   name: 'Authorization',
        //   in: 'header'
        // }
      }
    },
    security: [
      // { Bearer: [] }
    ]
  },
  // List of files to be processes. You can also set globs './routes/*.js'
  apis: [ __dirname + '/*.js' ]
}
const specs = swaggerJsdoc(options)

exports.boot = app => {
  fs.readdirSync(routePath).forEach(file => {
    if (file !== 'index.js') {
      const cleanPath = routePath + '/' + file.substr(0, file.indexOf('.'))
      const route = path.resolve(cleanPath)
      require(route)(app)
    }
  })
  app.use(SWAGGER_ROUTE, swaggerUi.serve, swaggerUi.setup(specs, { explorer: true }))
}
